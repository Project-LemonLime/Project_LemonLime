name: CPack - DEB - Ubuntu

on:
  push:
  release:
    types: [published]

jobs:
  check_commit_msg:
    outputs:
      commit_message: ${{ steps.get_message.outputs.message }}
    name: Check if the workflow has been disabled.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get commit message
        id: get_message
        run: |
          echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.event.after }})"
          echo "::set-env name=message::$(git log --format=%B -n 1 ${{ github.event.after }})"
  linux:
    strategy:
        fail-fast: false
        matrix:
          #distro: [14.04, 16.04, 18.04, 20.04]
          distro: [16.04, 18.04, 20.04]
          #arch: [x86, x64]
    needs: check_commit_msg
    if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, 'NO_DEB') }}
    name: Ubuntu ${{ matrix.distro }}
    runs-on: ubuntu-latest
    container: ubuntu:${{ matrix.distro }}

    steps:
      - name: Install git
        run: |
          apt-get update
          apt-get install -y software-properties-common
          add-apt-repository ppa:git-core/ppa
          apt-get update
          apt-get install -y git
      - name: Get the version
        id: get_version
        shell: bash
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Checking out sources
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          ref: master
      - name: Install build dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive apt-get install -y keyboard-configuration
          apt-get install -y build-essential ninja-build qtbase5-dev qttools5-dev qttools5-dev-tools libqt5help5 cmake pkgconf bash
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./AppDir/usr -DBUILD_DEB=ON
          cmake --build . --target package 
      - name: Get package name
        shell: bash
        id: get_package
        run: |
          echo ::set-output name=NAME::$(basename build/Lemon-*.deb)
      - name: Upload artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: Lemon-${{ steps.get_version.outputs.VERSION }}-ubuntu-${{ matrix.distro }}.deb
          path: build/${{ steps.get_package.outputs.NAME }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/${{ steps.get_package.outputs.NAME }}
          asset_name: Lemon-${{ steps.get_version.outputs.VERSION }}-ubuntu-${{ matrix.distro }}.deb
          tag: ${{ github.ref }}
          overwrite: true
