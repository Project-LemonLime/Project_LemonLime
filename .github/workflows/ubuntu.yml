name: Ubuntu
# Qt官方没有linux平台的x86包
on: 
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        qt_ver: [5.15.0]
        qt_arch: [gcc_64]
    steps:
      - name: cacheQt
        id: UbuntuCacheQt
        uses: actions/cache@v1
        with:
          path: ../Qt/${{matrix.qt_ver}}/${{matrix.qt_arch}}
          key: ${{ runner.os }}-Qt/${{matrix.qt_ver}}/${{matrix.qt_arch}}    
      - name: setupQt
        if: steps.UbuntuCacheQt.outputs.cache-hit == 'true'
        shell: pwsh
        env:
          QtPath: ../Qt/${{matrix.qt_ver}}/${{matrix.qt_arch}}
        run: |
          $qt_Path=${env:QtPath}
          echo "::set-env name=Qt5_Dir::$qt_Path"
          echo "::add-path::$qt_Path/bin"
      - name: Install Qt
        if: steps.UbuntuCacheQt.outputs.cache-hit != 'true'
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
      - name: ubuntu install GL library
        run: sudo apt-get install -y libglew-dev libglfw3-dev
      - name: Install build dependencies
        run: |
          sudo apt-get install -y build-essential ninja-build qtbase5-dev qttools5-dev cmake pkgconf
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: true
      - name: build ubuntu
        run: |
          g++ watcher_unix.cpp -o watcher_unix -O2
          cmake . -GNinja
          cmake --build . --parallel $(nproc)
