name: CPack - RPM - openSUSE TW

on:
  # push代码时触发workflow
  push:
    # 忽略README.md
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'BUILD.md'
  # pull_request时触发workflow
  pull_request:
    # 忽略README.md
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'BUILD.md'
  release:
    types: [published]

jobs:
  check_commit_msg:
    outputs:
      commit_message: ${{ steps.get_message.outputs.message }}
    name: Check if the workflow has been disabled.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get commit message
        id: get_message
        run: |
          echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.event.after }})"
          echo "::set-env name=message::$(git log --format=%B -n 1 ${{ github.event.after }})"
  linux:
    strategy:
        fail-fast: false
        matrix:
          distro: [latest]
          #distro: [testing, sid]
    needs: check_commit_msg
    if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, 'NO_RPM') }}
    name: openSUSE TW ${{ matrix.distro }}
    runs-on: ubuntu-latest
    container: opensuse/tumbleweed:${{ matrix.distro }}

    steps:
      - name: Install git
        run: |
          zypper -n in git
      - name: Get the version
        id: get_version
        shell: bash
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Checking out sources
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Install build dependencies
        run: |
          zypper -n rm busybox-gzip || true
          zypper -n in cmake libqt5-qtbase-common-devel libQt5Core-devel libQt5Gui-devel libQt5Network-devel libQt5Widgets-devel libQt5Concurrent-devel libqt5-linguist-devel libqt5-qtsvg-devel update-desktop-files ninja lsb-release gzip rpm-build
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DEMBED_TRANSLATIONS=OFF -DEMBED_DOCS=OFF -DCMAKE_BUILD_TYPE=Release -DBUILD_RPM=ON -DLEMON_BUILD_INFO="Build for openSUSE TW" -DLEMON_BUILD_EXTRA_INFO="Build on $(uname -sr)"
          cmake --build . --target package --parallel $(nproc)
      - name: Get package name
        shell: bash
        id: get_package
        run: |
          echo ::set-output name=NAME::$(basename build/LemonLime-*.rpm)
      - name: Upload artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: LemonLime-${{ steps.get_version.outputs.VERSION }}-openSUSE-TW-${{ matrix.distro }}.rpm
          path: build/${{ steps.get_package.outputs.NAME }}
#      - name: Upload binaries to release
#        uses: svenstaro/upload-release-action@v1-release
#        if: github.event_name == 'release'
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: build/${{ steps.get_package.outputs.NAME }}
#          asset_name: LemonLime-${{ steps.get_version.outputs.VERSION }}-openSUSE-TW-${{ matrix.distro }}.rpm
#          tag: ${{ github.ref }}
#          overwrite: true
